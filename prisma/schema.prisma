// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  password      String
  name          String
  role          Role         @default(EMPLOYEE)
  position      String?
  department    String?
  joinDate      DateTime?
  phoneNumber   String?
  address       String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  attendances   Attendance[]
  leaves        Leave[]
  payrolls      Payroll[]
}

model Attendance {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  date        DateTime  @default(now())
  checkIn     DateTime?
  checkOut    DateTime?
  status      String    @default("present") // present, absent, late
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([userId, date])
}

model Leave {
  id          String      @id @default(uuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  startDate   DateTime
  endDate     DateTime
  type        LeaveType
  reason      String
  status      LeaveStatus @default(PENDING)
  approvedBy  String?
  approvedAt  DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Payroll {
  id              String    @id @default(uuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  month           Int
  year            Int
  basicSalary     Float
  allowances      Float     @default(0)
  deductions      Float     @default(0)
  overtimePay     Float     @default(0)
  totalSalary     Float
  paymentDate     DateTime?
  paymentStatus   String    @default("pending") // pending, paid
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([userId, month, year])
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum LeaveType {
  ANNUAL
  SICK
  PERSONAL
  MATERNITY
  PATERNITY
  UNPAID
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}
